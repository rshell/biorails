Please note this is Biorails V3 the last version released under GNU licence. 

Version 4. and above were released under a commerial licences, with agreement with all authors. Afraid open source proved to be problem with tendering process 
on projects and incompatible with components we were integrating with.    

== Welcome to BioRails


1) Make sure you have the correct gems installed

Dependance Gems
  gem install rails
  gem install rake
  gem install tzinfo
  gem install mime-types
  gem install gnuplot
  gem install builder
  gem install ruport
  gem install scruffy
  gem install fastercsv
  gem install delegate
  gem install rexml
  gem install builder
  gem install ferret
  gem install htmldoc

Options gems needed based configration:-

  gem install mini_magick
  gem install rmagick
  gem install mongrel
  gem install mongrel_cluster  
  gem install mysql
  gem install postgres
  gem install rjb

The command  [ rake biorails:gems ] will load all the gems
  
2) Create a initial database

There are a number od biorails specific rake commands now for database creation.
For Mysql the following should work.

rake biorails:create
rake biorails:bootstrap

There are still some mysql scripts for these processes if you prefer.

 db/create_databases.mysql
 db/initial_db.mysql

Afraid for Oracle need real sqlplus creation scripts, these are not part of the 
open source offering.  


3) Put behind a web server

There are some example template for mongrel, apache and lighttpd in the config directory
as a starting place for this process. Internally I use apache 2.2 -> mongrel for
demo site and test machine. But am looking at lighttpd in future.

config/mongrel_cluster.yml
config/biorails-site-template.conf
config.lightttpd-template.conf

== Description of contents

app
  Holds all the code that's specific to this particular application.

app/controllers
  Holds controllers that should be named like weblog_controller.rb for
  automated URL mapping. All controllers should descend from
  ActionController::Base.

app/models
  Holds models that should be named like post.rb.
  Most models will descend from ActiveRecord::Base.
  
app/views
  Holds the template files for the view that should be named like
  weblog/index.rhtml for the WeblogController#index action. All views use eRuby
  syntax. This directory can also be used to keep stylesheets, images, and so on
  that can be symlinked to public.
  
app/helpers
  Holds view helpers that should be named like weblog_helper.rb.

app/apis
  Holds API classes for web services.

config
  Configuration files for the Rails environment, the routing map, the database, and other dependencies.
  Remember need to edit database.yml to point to correct database
 
components
  Self-contained mini-applications that can bundle together controllers, models, and views.

db
  Contains the database schema in schema.rb.  db/migrate contains all
  the sequence of Migrations for your schema.

db/dba
  Any helpful dba scripts written to solve problems with data dtabase

db/views 
   All view used for stats and reporting.

db/backup
  Backup database set created by biorails:backup action 
 
db/bootstrap
  Initial bootstrap data loaded by rake biorails:bootstrap action   

db/migrate
  Database structure changes


lib
  Application specific libraries. Basically, any kind of custom code that doesn't
  belong under controllers, models, or helpers. This directory is in the load path.
    
public
  The directory available for the web server. Contains subdirectories for images, stylesheets,
  and javascripts. Also contains the dispatchers and the default HTML files.

script
  Helper scripts for automation and generation.

test
  Unit and functional tests along with fixtures.

test/fixtures
  This is the default location export/import rake task write too

vendor
  External libraries that the application depends on. Also includes the plugins subdirectory.
  This directory is in the load path.
